name: Next.js CI/CD with pnpm

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: リポジトリをチェックアウト
      uses: actions/checkout@v3
    
    - name: Node.jsをセットアップ
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: pnpmをセットアップ
      uses: pnpm/action-setup@v2
      with:
        version: 8
        run_install: false

    - name: pnpmストアディレクトリを取得
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - name: pnpmキャッシュを設定
      uses: actions/cache@v3
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-
    
    - name: 依存関係をインストール
      run: pnpm install
    
    - name: Next.jsキャッシュ
      uses: actions/cache@v3
      with:
        path: ${{ github.workspace }}/.next/cache
        key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
        restore-keys: |
          ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-
    
    - name: リントを実行
      run: pnpm lint
    
    - name: アプリケーションをビルド
      run: pnpm build
    
    - name: ビルド成果物をアップロード
      uses: actions/upload-artifact@v3
      with:
        name: build-output
        path: .next/
        retention-days: 7

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: リポジトリをチェックアウト
      uses: actions/checkout@v3
    
    - name: Node.jsをセットアップ
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: pnpmをセットアップ
      uses: pnpm/action-setup@v2
      with:
        version: 8
        run_install: false
    
    - name: 依存関係をインストール
      run: pnpm install --prod
    
    - name: ビルド成果物をダウンロード
      uses: actions/download-artifact@v3
      with:
        name: build-output
        path: .next/
    
    # Vercelへのデプロイ例
    - name: Vercelへデプロイ
      uses: amondnet/vercel-action@v20
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./